de.codenauts.hockeyapp.AboutActivity -> de.codenauts.hockeyapp.AboutActivity:
    de.codenauts.hockeyapp.util.ActivityHelper activityHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
de.codenauts.hockeyapp.AppActivity -> de.codenauts.hockeyapp.AppActivity:
    de.codenauts.hockeyapp.util.ActivityHelper activityHelper -> a
    de.codenauts.hockeyapp.ImageLoader imageLoader -> d
    void onCreate(android.os.Bundle) -> onCreate
    void configureView() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    int getCurrentVersionCode() -> getCurrentVersionCode
    android.view.ViewGroup getLayoutView() -> b
    void createDownloadTask(java.lang.String,net.hockeyapp.android.internal.DownloadFileListener) -> a
de.codenauts.hockeyapp.AppDownloadTask -> de.codenauts.hockeyapp.a:
    java.lang.String token -> a
    java.net.URLConnection createConnection(java.net.URL) -> a
de.codenauts.hockeyapp.AppInfoTask -> de.codenauts.hockeyapp.b:
    de.codenauts.hockeyapp.MainActivity activity -> c
    java.lang.String token -> d
    int getVersionCode() -> a
    void onPostExecute(org.json.JSONArray) -> a
    java.lang.String getURLString(java.lang.String) -> a
    boolean getCachingEnabled() -> b
    java.net.URLConnection createConnection(java.net.URL) -> a
de.codenauts.hockeyapp.AppView -> de.codenauts.hockeyapp.AppView:
de.codenauts.hockeyapp.AppsAdapter -> de.codenauts.hockeyapp.c:
    de.codenauts.hockeyapp.ImageLoader imageLoader -> a
    android.app.Activity activity -> b
    java.util.ArrayList apps -> c
    android.view.LayoutInflater inflater -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
de.codenauts.hockeyapp.AppsTask -> de.codenauts.hockeyapp.d:
    boolean finished -> a
    int status -> b
    org.json.JSONArray apps -> c
    de.codenauts.hockeyapp.MainActivity activity -> d
    java.lang.String token -> e
    void attach(de.codenauts.hockeyapp.MainActivity) -> a
    void detach() -> a
    org.json.JSONArray doInBackground$4d6d4ee6() -> b
    void handleResult() -> c
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
de.codenauts.hockeyapp.Base64 -> de.codenauts.hockeyapp.e:
    byte[] _STANDARD_ALPHABET -> b
    byte[] _STANDARD_DECODABET -> c
    byte[] _URL_SAFE_ALPHABET -> d
    byte[] _URL_SAFE_DECODABET -> e
    byte[] _ORDERED_ALPHABET -> f
    byte[] _ORDERED_DECODABET -> g
    boolean $assertionsDisabled -> a
    byte[] encode3to4$45536f7a(byte[],int,int,byte[],int) -> a
    java.lang.String encodeBytes(byte[]) -> a
    java.lang.String encodeBytes$5fb0bea7(byte[],int) -> a
de.codenauts.hockeyapp.CustomUpdateActivity -> de.codenauts.hockeyapp.CustomUpdateActivity:
    de.codenauts.hockeyapp.util.ActivityHelper activityHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.view.ViewGroup getLayoutView() -> b
de.codenauts.hockeyapp.DebugActivity -> de.codenauts.hockeyapp.DebugActivity:
    de.codenauts.hockeyapp.util.ActivityHelper activityHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
de.codenauts.hockeyapp.FileCache -> de.codenauts.hockeyapp.f:
    java.io.File cacheDir -> a
    java.io.File getFile(java.lang.String) -> a
de.codenauts.hockeyapp.ImageLoader -> de.codenauts.hockeyapp.g:
    de.codenauts.hockeyapp.ImageLoader$ImageLoaderThread imageLoaderThread -> a
    de.codenauts.hockeyapp.ImageLoader$ImageQueue imageQueue -> b
    de.codenauts.hockeyapp.FileCache fileCache -> c
    java.util.Map imageViews -> d
    de.codenauts.hockeyapp.MemoryCache memoryCache -> e
    void displayImage$78054775(java.lang.String,android.widget.ImageView) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    android.graphics.Bitmap decodeFile(java.io.File) -> a
    void CopyStream(java.io.InputStream,java.io.OutputStream) -> a
    de.codenauts.hockeyapp.ImageLoader$ImageQueue access$0(de.codenauts.hockeyapp.ImageLoader) -> a
    android.graphics.Bitmap access$1(de.codenauts.hockeyapp.ImageLoader,java.lang.String) -> a
    de.codenauts.hockeyapp.MemoryCache access$2(de.codenauts.hockeyapp.ImageLoader) -> b
    java.util.Map access$3(de.codenauts.hockeyapp.ImageLoader) -> c
de.codenauts.hockeyapp.ImageLoader$BitmapDisplayer -> de.codenauts.hockeyapp.h:
    android.graphics.Bitmap bitmap -> a
    android.widget.ImageView imageView -> b
    de.codenauts.hockeyapp.ImageLoader this$0 -> c
    void run() -> run
de.codenauts.hockeyapp.ImageLoader$ImageLoaderThread -> de.codenauts.hockeyapp.i:
    de.codenauts.hockeyapp.ImageLoader this$0 -> a
    void run() -> run
de.codenauts.hockeyapp.ImageLoader$ImageQueue -> de.codenauts.hockeyapp.j:
    java.util.Stack imagesToLoad -> b
    de.codenauts.hockeyapp.ImageLoader this$0 -> a
    void remove(android.widget.ImageView) -> a
    java.util.Stack access$1(de.codenauts.hockeyapp.ImageLoader$ImageQueue) -> a
de.codenauts.hockeyapp.ImageLoader$ImageToLoad -> de.codenauts.hockeyapp.k:
    java.lang.String url -> a
    android.widget.ImageView imageView -> b
    de.codenauts.hockeyapp.ImageLoader this$0 -> c
de.codenauts.hockeyapp.LoginTask -> de.codenauts.hockeyapp.l:
    boolean finished -> a
    int status -> b
    de.codenauts.hockeyapp.MainActivity activity -> c
    java.lang.String credentials -> d
    java.lang.String token -> e
    void attach(de.codenauts.hockeyapp.MainActivity) -> a
    void detach() -> a
    java.lang.String doInBackground$4af589aa() -> b
    java.lang.String findToken(org.json.JSONArray,boolean) -> a
    org.json.JSONArray createToken() -> c
    org.json.JSONArray parseJSONFromString(java.lang.String) -> a
    void addCredentialsToConnection(java.net.HttpURLConnection) -> a
    void handleResult() -> d
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
de.codenauts.hockeyapp.MainActivity -> de.codenauts.hockeyapp.MainActivity:
    de.codenauts.hockeyapp.util.ActivityHelper activityHelper -> a
    android.app.AlertDialog alert -> b
    de.codenauts.hockeyapp.AppsAdapter appsAdapter -> c
    de.codenauts.hockeyapp.AppsTask appsTask -> d
    de.codenauts.hockeyapp.AppInfoTask appTask -> e
    org.json.JSONArray apps -> f
    de.codenauts.hockeyapp.LoginTask loginTask -> g
    int selectedAppIndex -> h
    android.view.View selectedAppView -> i
    void onCreate(android.os.Bundle) -> onCreate
    void checkForUpdates(java.lang.Boolean) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void loadApps(android.os.Bundle) -> a
    void getApps(java.lang.String) -> b
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    java.lang.String getAPIToken() -> a
    void setAPIToken(java.lang.String) -> c
    void setStatus(java.lang.String) -> d
    void setStatus(int) -> c
    void loginWasSuccesful(java.lang.String) -> a
    void loginFailed(int) -> a
    void didFailToReceiveApps(int) -> b
    java.lang.String getMessageForStatus(int) -> d
    void didReceiveApps(org.json.JSONArray) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void didReceiveAppInfo(org.json.JSONArray,java.lang.String) -> a
    android.app.AlertDialog access$0(de.codenauts.hockeyapp.MainActivity) -> a
    void access$1(de.codenauts.hockeyapp.MainActivity,de.codenauts.hockeyapp.LoginTask) -> a
    de.codenauts.hockeyapp.LoginTask access$2(de.codenauts.hockeyapp.MainActivity) -> b
    void access$3$28173559(de.codenauts.hockeyapp.MainActivity) -> c
de.codenauts.hockeyapp.MainActivity$1 -> de.codenauts.hockeyapp.m:
    de.codenauts.hockeyapp.MainActivity this$0 -> a
    java.lang.Boolean val$notify -> b
    java.lang.Class getUpdateActivityClass() -> a
    void onNoUpdateAvailable() -> b
de.codenauts.hockeyapp.MainActivity$2 -> de.codenauts.hockeyapp.n:
    de.codenauts.hockeyapp.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
de.codenauts.hockeyapp.MainActivity$3 -> de.codenauts.hockeyapp.o:
    de.codenauts.hockeyapp.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
de.codenauts.hockeyapp.MemoryCache -> de.codenauts.hockeyapp.p:
    java.util.HashMap cache -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void put(java.lang.String,android.graphics.Bitmap) -> a
de.codenauts.hockeyapp.OnlineHelper -> de.codenauts.hockeyapp.q:
    java.lang.String getStringFromConnection(java.net.HttpURLConnection) -> a
    java.lang.String convertStreamToString(java.io.InputStream) -> a
de.codenauts.hockeyapp.util.ActivityHelper -> de.codenauts.hockeyapp.a.a:
    android.app.Activity activity -> a
    de.codenauts.hockeyapp.util.ActivityHelper createInstance(android.app.Activity) -> a
    void goHome() -> a
    void setupActionBar$609be50a() -> b
    void setupHomeAsUp() -> c
    void hideTitle() -> d
    void setActionBarColor(int) -> a
    android.view.ViewGroup getActionBarCompat() -> e
de.codenauts.hockeyapp.util.ActivityHelper$1 -> de.codenauts.hockeyapp.a.b:
    de.codenauts.hockeyapp.util.ActivityHelper this$0 -> a
    void onClick(android.view.View) -> onClick
de.codenauts.hockeyapp.util.ActivityHelperHoneycomb -> de.codenauts.hockeyapp.a.c:
    void setActionBarColor(int) -> a
de.codenauts.hockeyapp.util.UIUtils -> de.codenauts.hockeyapp.a.d:
    boolean isHoneycomb() -> a
net.hockeyapp.android.Constants -> net.hockeyapp.android.a:
    java.lang.String FILES_PATH -> a
    java.lang.String APP_VERSION -> b
    java.lang.String APP_PACKAGE -> c
    java.lang.String ANDROID_VERSION -> d
    java.lang.String PHONE_MODEL -> e
    java.lang.String PHONE_MANUFACTURER -> f
    void loadFromContext(android.content.Context) -> a
net.hockeyapp.android.CrashManager -> net.hockeyapp.android.b:
    java.lang.String identifier -> a
    java.lang.String urlString -> b
    void register(android.content.Context,java.lang.String) -> a
    int hasStackTraces(android.content.Context) -> b
    void submitStackTraces(android.content.Context,net.hockeyapp.android.CrashManagerListener) -> a
    void deleteStackTraces(android.content.Context) -> a
    void sendCrashes(android.content.Context,net.hockeyapp.android.CrashManagerListener,boolean) -> b
    void registerHandler$415a69f1(net.hockeyapp.android.CrashManagerListener,boolean) -> b
    void deleteStackTrace(android.content.Context,java.lang.String) -> b
    java.lang.String contentsOfFile(android.content.Context,java.lang.String) -> c
    java.lang.String[] searchForStackTraces() -> a
    void access$0$415a69f1(net.hockeyapp.android.CrashManagerListener,boolean) -> a
    void access$1(android.content.Context,net.hockeyapp.android.CrashManagerListener,boolean) -> a
net.hockeyapp.android.CrashManager$1 -> net.hockeyapp.android.c:
    android.content.Context val$context -> a
    net.hockeyapp.android.CrashManagerListener val$listener -> b
    boolean val$ignoreDefaultHandler -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.CrashManager$2 -> net.hockeyapp.android.d:
    android.content.Context val$context -> a
    net.hockeyapp.android.CrashManagerListener val$listener -> b
    boolean val$ignoreDefaultHandler -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.CrashManager$3 -> net.hockeyapp.android.e:
    android.content.Context val$context -> a
    net.hockeyapp.android.CrashManagerListener val$listener -> b
    boolean val$ignoreDefaultHandler -> c
    void run() -> run
net.hockeyapp.android.CrashManager$4 -> net.hockeyapp.android.f:
    boolean accept(java.io.File,java.lang.String) -> accept
net.hockeyapp.android.CrashManagerListener -> net.hockeyapp.android.g:
net.hockeyapp.android.ExpiryInfoActivity -> net.hockeyapp.android.ExpiryInfoActivity:
    void onCreate(android.os.Bundle) -> onCreate
net.hockeyapp.android.StringListener -> net.hockeyapp.android.h:
    java.lang.String getStringForResource(int) -> a
net.hockeyapp.android.Strings -> net.hockeyapp.android.i:
    java.lang.String[] ENGLISH -> a
    java.lang.String get(net.hockeyapp.android.StringListener,int) -> a
net.hockeyapp.android.Tracking -> net.hockeyapp.android.j:
    long getUsageTime(android.content.Context) -> a
net.hockeyapp.android.UpdateActivity -> net.hockeyapp.android.UpdateActivity:
    net.hockeyapp.android.internal.DownloadFileTask downloadTask -> b
    net.hockeyapp.android.internal.VersionHelper versionHelper -> c
    void onCreate(android.os.Bundle) -> onCreate
    void configureView() -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void startDownloadTask() -> d
    void createDownloadTask(java.lang.String,net.hockeyapp.android.internal.DownloadFileListener) -> a
    void enableUpdateButton() -> c
    int getCurrentVersionCode() -> getCurrentVersionCode
    android.view.ViewGroup getLayoutView() -> b
    java.lang.String getAppName() -> e
    void onClick(android.view.View) -> onClick
    void access$1(net.hockeyapp.android.UpdateActivity) -> a
net.hockeyapp.android.UpdateActivity$1 -> net.hockeyapp.android.k:
    net.hockeyapp.android.UpdateActivity this$0 -> a
    void downloadSuccessful$590bfecc() -> a
    void downloadFailed$559e4667(java.lang.Boolean) -> a
    java.lang.String getStringForResource(int) -> a
net.hockeyapp.android.UpdateFragment -> net.hockeyapp.android.UpdateFragment:
    net.hockeyapp.android.internal.DownloadFileTask downloadTask -> downloadTask
    org.json.JSONArray versionInfo -> versionInfo
    java.lang.String urlString -> urlString
    net.hockeyapp.android.internal.VersionHelper versionHelper -> versionHelper
    net.hockeyapp.android.UpdateFragment newInstance(org.json.JSONArray,java.lang.String) -> newInstance
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    void startDownloadTask(android.app.Activity) -> startDownloadTask
    int getCurrentVersionCode() -> getCurrentVersionCode
    java.lang.String getAppName() -> getAppName
    android.view.View getLayoutView() -> getLayoutView
    void access$0(net.hockeyapp.android.UpdateFragment,android.app.Activity) -> access$0
net.hockeyapp.android.UpdateFragment$1 -> net.hockeyapp.android.l:
    net.hockeyapp.android.UpdateFragment this$0 -> a
    android.app.Activity val$activity -> b
    void downloadFailed$559e4667(java.lang.Boolean) -> a
    void downloadSuccessful$590bfecc() -> a
    java.lang.String getStringForResource(int) -> a
net.hockeyapp.android.UpdateInfoListener -> net.hockeyapp.android.m:
    int getCurrentVersionCode() -> getCurrentVersionCode
net.hockeyapp.android.UpdateManager -> net.hockeyapp.android.n:
    net.hockeyapp.android.internal.CheckUpdateTask updateTask -> a
    net.hockeyapp.android.UpdateManagerListener lastListener -> b
    void register(android.app.Activity,java.lang.String,net.hockeyapp.android.UpdateManagerListener) -> a
    java.lang.Boolean fragmentsSupported() -> a
    java.lang.Boolean runsOnTablet(android.app.Activity) -> a
    net.hockeyapp.android.UpdateManagerListener getLastListener() -> b
net.hockeyapp.android.UpdateManagerListener -> net.hockeyapp.android.o:
    java.lang.Class getUpdateActivityClass() -> a
    void onNoUpdateAvailable() -> b
net.hockeyapp.android.internal.CheckUpdateTask -> net.hockeyapp.android.internal.a:
    java.lang.String urlString -> a
    java.lang.String appIdentifier -> b
    android.app.Activity activity -> c
    java.lang.Boolean mandatory -> d
    net.hockeyapp.android.UpdateManagerListener listener -> e
    long usageTime -> f
    void attach(android.app.Activity) -> a
    void detach() -> c
    int getVersionCode() -> a
    org.json.JSONArray doInBackground$4d6d4ee6() -> d
    java.net.URLConnection createConnection(java.net.URL) -> a
    boolean findNewVersion(org.json.JSONArray,int) -> a
    void onPostExecute(org.json.JSONArray) -> a
    void cleanUp() -> e
    java.lang.String getURLString(java.lang.String) -> a
    java.lang.String encodeParam(java.lang.String) -> b
    void startUpdateIntent(org.json.JSONArray,java.lang.Boolean) -> a
    java.lang.String convertStreamToString(java.io.InputStream) -> a
    boolean getCachingEnabled() -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void access$2(net.hockeyapp.android.internal.CheckUpdateTask) -> a
    android.app.Activity access$3(net.hockeyapp.android.internal.CheckUpdateTask) -> b
    void access$4(net.hockeyapp.android.internal.CheckUpdateTask,org.json.JSONArray) -> a
    void access$5(net.hockeyapp.android.internal.CheckUpdateTask,org.json.JSONArray,java.lang.Boolean) -> a
net.hockeyapp.android.internal.CheckUpdateTask$1 -> net.hockeyapp.android.internal.b:
    net.hockeyapp.android.internal.CheckUpdateTask this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.internal.CheckUpdateTask$2 -> net.hockeyapp.android.internal.c:
    net.hockeyapp.android.internal.CheckUpdateTask this$0 -> a
    org.json.JSONArray val$updateInfo -> b
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.internal.DownloadFileListener -> net.hockeyapp.android.internal.d:
    void downloadFailed$559e4667(java.lang.Boolean) -> a
    void downloadSuccessful$590bfecc() -> a
net.hockeyapp.android.internal.DownloadFileTask -> net.hockeyapp.android.internal.e:
    android.content.Context context -> a
    net.hockeyapp.android.internal.DownloadFileListener notifier -> b
    java.lang.String urlString -> c
    java.lang.String filename -> d
    java.lang.String filePath -> e
    android.app.ProgressDialog progressDialog -> f
    void attach(android.content.Context) -> a
    void detach() -> a
    java.lang.Boolean doInBackground$7273979() -> b
    java.net.URLConnection createConnection(java.net.URL) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    net.hockeyapp.android.internal.DownloadFileListener access$3(net.hockeyapp.android.internal.DownloadFileTask) -> a
net.hockeyapp.android.internal.DownloadFileTask$1 -> net.hockeyapp.android.internal.f:
    net.hockeyapp.android.internal.DownloadFileTask this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.internal.DownloadFileTask$2 -> net.hockeyapp.android.internal.g:
    net.hockeyapp.android.internal.DownloadFileTask this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
net.hockeyapp.android.internal.ExceptionHandler -> net.hockeyapp.android.internal.h:
    boolean ignoreDefaultHandler -> a
    net.hockeyapp.android.CrashManagerListener listener -> b
    java.lang.Thread$UncaughtExceptionHandler defaultExceptionHandler -> c
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void writeValueToFile$16da05f7(java.lang.String) -> a
net.hockeyapp.android.internal.ExpiryInfoView -> net.hockeyapp.android.internal.i:
net.hockeyapp.android.internal.UpdateView -> net.hockeyapp.android.internal.UpdateView:
    android.widget.RelativeLayout headerView -> a
    boolean layoutHorizontally -> b
    boolean limitHeight -> c
net.hockeyapp.android.internal.VersionCache -> net.hockeyapp.android.internal.j:
    java.lang.String VERSION_INFO_KEY -> a
    void setVersionInfo(android.content.Context,java.lang.String) -> a
    java.lang.String getVersionInfo(android.content.Context) -> a
net.hockeyapp.android.internal.VersionHelper -> net.hockeyapp.android.internal.k:
    java.util.ArrayList sortedVersions -> a
    org.json.JSONObject newest -> b
    net.hockeyapp.android.UpdateInfoListener listener -> c
    void loadVersions(java.lang.String) -> a
    java.lang.String getVersionString() -> a
    java.lang.String getFileInfoString() -> b
    java.lang.String failSafeGetStringFromJSON(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    int failSafeGetIntFromJSON$4afff19d(org.json.JSONObject,java.lang.String) -> a
    java.lang.String getReleaseNotes() -> c
    java.lang.Object getVersionLine(int,org.json.JSONObject) -> a
net.hockeyapp.android.internal.VersionHelper$1 -> net.hockeyapp.android.internal.l:
    net.hockeyapp.android.internal.VersionHelper this$0 -> a
    int compare(org.json.JSONObject,org.json.JSONObject) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
net.hockeyapp.android.internal.ViewHelper -> net.hockeyapp.android.internal.m:
    android.graphics.drawable.Drawable getGradient() -> a
